"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[815],{5049:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-86ef622a",path:"/docs/tools/actions.html",title:"Actions",lang:"en-US",frontmatter:{id:"actions",title:"Actions"},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[]},{level:2,title:"Usage",slug:"usage",children:[]},{level:2,title:"Implementation",slug:"implementation",children:[]},{level:2,title:"See also",slug:"see-also",children:[]}],filePathRelative:"docs/tools/actions.md",git:{updatedTime:1633465343e3,contributors:[{name:"Isha",email:"ishadijcks@gmail.com",commits:1}]}}},602:(n,s,a)=>{a.r(s),a.d(s,{default:()=>h});var t=a(6252);const e=(0,t.uE)('<p><code>Actions</code> are of use for all games. Basically any operation that takes some time with some sort of outcome can be implemented as an Action. Actions can be repeated for when you want to gather resources, or singular when constructing a building. There are also <code>RecipeActions</code> that take an input/output to transform items in your <a href="../features/inventory">Inventory</a>.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ul><li>Easy to implement custom behaviour</li><li>Allow repetition of actions</li><li>Notify when action is completed</li></ul><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> fishAction <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GainItemAction</span><span class="token punctuation">(</span>ItemId<span class="token punctuation">.</span>RawFish<span class="token punctuation">,</span> <span class="token string">&#39;Fish&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> features<span class="token punctuation">.</span>inventory<span class="token punctuation">,</span> features<span class="token punctuation">.</span>itemList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> delta <span class="token operator">=</span> <span class="token number">0.2</span><span class="token punctuation">;</span>\nfishAction<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>delta<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="implementation" tabindex="-1"><a class="header-anchor" href="#implementation" aria-hidden="true">#</a> Implementation</h2>',6),p=(0,t.Uk)("We can create our custom Action by overriding the "),o=(0,t._)("code",null,"AbstractAction.ts",-1),c=(0,t.Uk)(". If we want an action to reward an "),i=(0,t.Uk)("Items"),l=(0,t.Uk)(" for example."),r=(0,t.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">GainItemAction</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractAction</span> <span class="token punctuation">{</span>\n\n    itemId<span class="token operator">:</span> ItemId<span class="token punctuation">;</span>\n\n    _inventory<span class="token operator">:</span> Inventory<span class="token punctuation">;</span>\n    _itemList<span class="token operator">:</span> ItemList<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span>itemId<span class="token operator">:</span> ItemId<span class="token punctuation">,</span> description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> duration<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> inventory<span class="token operator">:</span> Inventory<span class="token punctuation">,</span> itemList<span class="token operator">:</span> ItemList<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span>description<span class="token punctuation">,</span> duration<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>itemId <span class="token operator">=</span> itemId<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_inventory <span class="token operator">=</span> inventory<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_itemList <span class="token operator">=</span> itemList<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">gainReward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_inventory<span class="token punctuation">.</span><span class="token function">gainItem</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_itemList<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>itemId<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h4><h4 id="oncompletion" tabindex="-1"><a class="header-anchor" href="#oncompletion" aria-hidden="true">#</a> onCompletion</h4><p>Emitted whenever this action is completed. Not that actions can be repeated and thus completed multiple times.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>App<span class="token punctuation">.</span>game<span class="token punctuation">.</span>features<span class="token punctuation">.</span>feature<span class="token punctuation">.</span>action<span class="token punctuation">.</span>onCompletion<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>action <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Completed&quot;</span><span class="token punctuation">,</span> action<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>',6),u={href:"https://github.com/123ishaTest/igt-library/tree/master/src/ig-template/tools/actions",target:"_blank",rel:"noopener noreferrer"},k=(0,t.Uk)("src/ig-template/tools/actions"),m={href:"https://github.com/123ishaTest/igt-library/tree/master/src/ig-template/tools/actions/IgtAction.ts",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("src/ig-template/tools/actions/IgtAction.ts"),b={},h=(0,a(3744).Z)(b,[["render",function(n,s){const a=(0,t.up)("RouterLink"),b=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t._)("p",null,[p,o,c,(0,t.Wm)(a,{to:"/docs/tools/items.html"},{default:(0,t.w5)((()=>[i])),_:1}),l]),r,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",u,[k,(0,t.Wm)(b)])]),(0,t._)("li",null,[(0,t._)("a",m,[d,(0,t.Wm)(b)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,t]of s)n[a]=t;return n}}}]);