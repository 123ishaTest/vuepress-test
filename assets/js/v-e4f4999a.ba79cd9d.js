"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[346],{3703:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-e4f4999a",path:"/docs/tools/probability.html",title:"Probability",lang:"en-US",frontmatter:{id:"probability",title:"Probability"},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[]},{level:2,title:"Usage",slug:"usage",children:[]},{level:2,title:"TODO",slug:"todo",children:[]},{level:2,title:"See also",slug:"see-also",children:[]}],filePathRelative:"docs/tools/probability.md",git:{updatedTime:1633465343e3,contributors:[{name:"Isha",email:"ishadijcks@gmail.com",commits:1}]}}},4711:(n,s,a)=>{a.r(s),a.d(s,{default:()=>k});var t=a(6252);const e=(0,t.uE)('<p>Randomness is a tricky thing to get right. Ideally you have all your randomness from the same source. This makes it much easier to validate, and dismiss players complaining about RNG with confidence. The only way for the droprate on item X to be broken, is if it were broken everywhere in your game.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ul><li>It should be complete, the developer should never have to use <code>Math.random()</code> in their own scripts</li><li>Support all basic operations</li><li>Support custom types. Any type should be able to be drawn from a distribution</li></ul><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// integer between min (inclusive) and max (exclusive)</span>\n<span class="token keyword">const</span> <span class="token builtin">number</span> <span class="token operator">=</span> Random<span class="token punctuation">.</span><span class="token function">intBetween</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 1 in 1000 chance to be true</span>\n<span class="token keyword">const</span> isLegendary <span class="token operator">=</span> Random<span class="token punctuation">.</span><span class="token function">booleanWithOneInChance</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 50% chance to be true</span>\n<span class="token keyword">const</span> fiftyFifty <span class="token operator">=</span> Random<span class="token punctuation">.</span><span class="token function">booleanWithProbability</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Random element from array</span>\n<span class="token keyword">const</span> element <span class="token operator">=</span> Random<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Weighted distribution (weights don&#39;t have to be normalized)</span>\n<span class="token keyword">const</span> distribution <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeightedDistribution</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">Outcome<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">Outcome<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.99</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\ndistribution<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 1 or 2, but probably 2</span>\n\n\n<span class="token comment">// Add requirements to Outcomes!</span>\n<span class="token keyword">const</span> distributionWithRequirements <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeightedDistribution</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">Outcome<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">Outcome<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.99</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BooleanRequirement</span><span class="token punctuation">(</span><span class="token string">&#39;always false&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\ndistribution<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>\n\n<span class="token comment">// Draw custom objects</span>\n<span class="token keyword">class</span> <span class="token class-name">MyObject</span> <span class="token punctuation">{</span>\n    itemId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> weapon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyObject</span><span class="token punctuation">(</span><span class="token string">&#39;weapon&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to attack with&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> shield <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyObject</span><span class="token punctuation">(</span><span class="token string">&#39;shield&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to block with&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> distributionWithCustomObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeightedDistribution</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">Outcome<span class="token operator">&lt;</span>MyObject<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>weapon<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">Outcome<span class="token operator">&lt;</span>MyObject<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>shield<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\ndistributionWithCustomObjects<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// The &#39;weapon&#39; or &#39;shield&#39; object</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h2 id="todo" tabindex="-1"><a class="header-anchor" href="#todo" aria-hidden="true">#</a> TODO</h2><ul><li>Add more distributions (gaussian, uniform)</li></ul><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>',8),p={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/probability/Random.ts",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("src/ig-template/tools/probability/Random.ts"),l={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/probability/Outcome.ts",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("src/ig-template/tools/probability/Outcome.ts"),i={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/probability/WeightedDistribution.ts",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("src/ig-template/tools/probability/WeightedDistribution.ts"),u={},k=(0,a(3744).Z)(u,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",p,[o,(0,t.Wm)(a)])]),(0,t._)("li",null,[(0,t._)("a",l,[c,(0,t.Wm)(a)])]),(0,t._)("li",null,[(0,t._)("a",i,[r,(0,t.Wm)(a)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,t]of s)n[a]=t;return n}}}]);