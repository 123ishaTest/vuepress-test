"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[775],{2352:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-047bc51e",path:"/docs/features/achievements.html",title:"Achievements",lang:"en-US",frontmatter:{title:"Achievements"},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[]},{level:2,title:"Usage",slug:"usage",children:[{level:3,title:"Events",slug:"events",children:[]}]},{level:2,title:"See also",slug:"see-also",children:[]}],filePathRelative:"docs/features/achievements.md",git:{updatedTime:1633465343e3,contributors:[{name:"Isha",email:"ishadijcks@gmail.com",commits:1}]}}},6117:(n,s,a)=>{a.r(s),a.d(s,{default:()=>h});var e=a(6252);const t=(0,e._)("p",null,"Achievements are great. Not only is it a way to reward the player for doing random stuff. They also promise that your game is worthwhile. If the player can see they have many rows of achievements left to complete, they will keep playing for a longer time.",-1),p=(0,e._)("h2",{id:"requirements",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#requirements","aria-hidden":"true"},"#"),(0,e.Uk)(" Requirements")],-1),c=(0,e.Uk)("Make it easy to create an achievement based on a "),o=(0,e.Uk)("Statistic"),l=(0,e._)("li",null,"Custom achievements that can be manually completed",-1),i=(0,e._)("li",null,"Title, description and image, to add some flavour to achievements",-1),u=(0,e.uE)('<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">IgtAchievements</span> <span class="token keyword">extends</span> <span class="token class-name">Feature</span> <span class="token punctuation">{</span>\n    <span class="token function">initialize</span><span class="token punctuation">(</span>features<span class="token operator">:</span> Features<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// You can base achievements on statistics</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerAchievement</span><span class="token punctuation">(</span>\n            <span class="token keyword">new</span> <span class="token class-name">Achievement</span><span class="token punctuation">(</span>\n                AchievementId<span class="token punctuation">.</span>TotalMoney100<span class="token punctuation">,</span> <span class="token string">&quot;Gain 100 total money&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;Automatically triggered if you gain enough money&#39;</span><span class="token punctuation">,</span>\n                <span class="token keyword">new</span> <span class="token class-name">NumberStatisticRequirement</span><span class="token punctuation">(</span>features<span class="token punctuation">.</span>statistics<span class="token punctuation">.</span>totalMoneyGained<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Or have manual ones. You&#39;ll have to trigger them with `achievement.forceUnlock()`</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerAchievement</span><span class="token punctuation">(</span>\n            <span class="token keyword">new</span> <span class="token class-name">CustomAchievement</span><span class="token punctuation">(</span>AchievementId<span class="token punctuation">.</span>ExampleAchievement<span class="token punctuation">,</span> <span class="token string">&quot;Custom Achievement&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;Can be completed manually&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h3><h4 id="onunlock" tabindex="-1"><a class="header-anchor" href="#onunlock" aria-hidden="true">#</a> onUnlock</h4><p>Emitted whenever an Achievement is unlocked.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>App<span class="token punctuation">.</span>game<span class="token punctuation">.</span>features<span class="token punctuation">.</span>achievements<span class="token punctuation">.</span>onUnlock<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>achievement <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Achievement unlocked:&quot;</span><span class="token punctuation">,</span> achievement<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>',7),r={href:"https://github.com/123ishaTest/igt-library/tree/master/src/ig-template/features/achievements",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Uk)("src/ig-template/features/achievements"),k={},h=(0,a(3744).Z)(k,[["render",function(n,s){const a=(0,e.up)("RouterLink"),k=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,p,(0,e._)("ul",null,[(0,e._)("li",null,[c,(0,e.Wm)(a,{to:"/docs/features/statistics.html"},{default:(0,e.w5)((()=>[o])),_:1})]),l,i]),u,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",r,[m,(0,e.Wm)(k)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);