"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[618],{3677:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-00e1eaba",path:"/docs/tools/requirements.html",title:"Requirements",lang:"en-US",frontmatter:{id:"requirements",title:"Requirements"},excerpt:"",headers:[{level:2,title:"Requirements (haha)",slug:"requirements-haha",children:[]},{level:2,title:"Implementation",slug:"implementation",children:[]},{level:2,title:"See also",slug:"see-also",children:[]}],filePathRelative:"docs/tools/requirements.md",git:{updatedTime:1633465343e3,contributors:[{name:"Isha",email:"ishadijcks@gmail.com",commits:1}]}}},7604:(n,s,a)=>{a.r(s),a.d(s,{default:()=>b});var e=a(6252);const t=(0,e.uE)('<p>Requirements are very important in incremental games, where features are often locked behind certain requirements. The <code>Requirement</code> is an abstract class which makes the implementation more generic, and will be used many times in your game.</p><h2 id="requirements-haha" tabindex="-1"><a class="header-anchor" href="#requirements-haha" aria-hidden="true">#</a> Requirements (haha)</h2><ul><li>Be as generic, and easily extendable, as possible</li><li>Get the completion progress</li><li>Get a hint on completion conditions</li><li>Variations for multiple requirements (One/All requirements from a list)</li></ul><h2 id="implementation" tabindex="-1"><a class="header-anchor" href="#implementation" aria-hidden="true">#</a> Implementation</h2><p>The abstract base class if very straightforward. It exposes a bunch of getters. I use getters here because these methods should really be seen as attributes. They should not perform any logic, just access data.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Requirement</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">get</span> <span class="token function">isCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>actualValue <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>targetValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">get</span> <span class="token function">progress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Progress <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Progress</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>actualValue<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>targetValue<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>targetValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">abstract</span> <span class="token keyword">get</span> <span class="token function">hint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">abstract</span> <span class="token keyword">get</span> <span class="token function">actualValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">abstract</span> <span class="token keyword">get</span> <span class="token function">targetValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>We can extend this for example with a <code>CurrencyRequirement</code>:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CurrencyRequirement</span> <span class="token keyword">extends</span> <span class="token class-name">Requirement</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> _wallet<span class="token operator">:</span> Wallet<span class="token punctuation">;</span>\n    amount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n    type<span class="token operator">:</span> CurrencyType<span class="token punctuation">;</span>\n\n    <span class="token keyword">get</span> <span class="token function">actualValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_wallet<span class="token punctuation">.</span><span class="token function">getAmount</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">get</span> <span class="token function">targetValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>amount<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">get</span> <span class="token function">hint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Have </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>amount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">type</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>Extend <code>Requirement</code> with whatever you like! I expect your game will have a ton of custom requirements.</p><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>',10),p={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/requirements",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("src/ig-template/tools/requirements/"),l={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/requirements/Requirement.ts",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("src/ig-template/tools/requirements/Requirement.ts"),c={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/requirements/CustomRequirement.ts",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("src/ig-template/tools/requirements/CustomRequirement.ts"),u={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/features/wallet/CurrencyRequirement.ts",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Uk)("src/ig-template/features/wallet/CurrencyRequirement.ts"),m={},b=(0,a(3744).Z)(m,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",p,[o,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",l,[r,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",c,[i,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",u,[k,(0,e.Wm)(a)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);