"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[51],{7347:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-6a58f802",path:"/docs/features/settings.html",title:"Settings",lang:"en-US",frontmatter:{id:"settings",title:"Settings"},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[]},{level:2,title:"Usage",slug:"usage",children:[]},{level:2,title:"Implementation",slug:"implementation",children:[]},{level:2,title:"See also",slug:"see-also",children:[]}],filePathRelative:"docs/features/settings.md",git:{updatedTime:1633465343e3,contributors:[{name:"Isha",email:"ishadijcks@gmail.com",commits:1}]}}},2489:(n,s,a)=>{a.r(s),a.d(s,{default:()=>R});var t=a(6252);const p=(0,t._)("p",null,[(0,t.Uk)("From changing the layout to toggling the automation of a feature, a "),(0,t._)("code",null,"Setting"),(0,t.Uk)(" is anything the user can freely control.")],-1),e=(0,t._)("h2",{id:"requirements",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#requirements","aria-hidden":"true"},"#"),(0,t.Uk)(" Requirements")],-1),o=(0,t._)("li",null,"Allow the player to easily change settings",-1),l=(0,t._)("li",null,"Boolean, Number and String options",-1),c=(0,t._)("li",null,"Extendable with different types",-1),u=(0,t._)("li",null,"Multiple choice and Range settings",-1),i=(0,t._)("li",null,"Set a default value",-1),r=(0,t.Uk)("Lock settings and even options behind "),k=(0,t.Uk)("requirements"),b=(0,t._)("li",null,"Save & Load",-1),m=(0,t.uE)('<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> settings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nsettings<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>\n    <span class="token keyword">new</span> <span class="token class-name">MultipleChoiceSetting</span><span class="token punctuation">(</span>SettingId<span class="token punctuation">.</span>ExampleSetting<span class="token punctuation">,</span> <span class="token string">&quot;Example setting&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n        <span class="token keyword">new</span> <span class="token class-name">SettingOption<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;Option 1&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token keyword">new</span> <span class="token class-name">SettingOption<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;Option 2&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token keyword">new</span> <span class="token class-name">SettingOption<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;Option 3&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nsettings<span class="token punctuation">.</span><span class="token function">setSetting</span><span class="token punctuation">(</span>SettingId<span class="token punctuation">.</span>ExampleSetting<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Not a valid option, nothing happens</span>\nsettings<span class="token punctuation">.</span><span class="token function">setSetting</span><span class="token punctuation">(</span>SettingId<span class="token punctuation">.</span>ExampleSetting<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Passing &lt;number&gt; is optional.</span>\n<span class="token keyword">const</span> exampleSetting <span class="token operator">=</span> settings<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">getSetting</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>SettingId<span class="token punctuation">.</span>ExampleSetting<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>exampleSetting<span class="token operator">?.</span>value <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Do something</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="implementation" tabindex="-1"><a class="header-anchor" href="#implementation" aria-hidden="true">#</a> Implementation</h2>',3),d=(0,t.Uk)("The abstract "),g=(0,t._)("code",null,"Setting",-1),h=(0,t.Uk)(" class is the base for all custom settings. It uses "),y={href:"https://www.typescriptlang.org/docs/handbook/generics.html",target:"_blank",rel:"noopener noreferrer"},w=(0,t.Uk)("TypeScript Generics"),f=(0,t.Uk)(" which allows the setting value to be any type you like."),v=(0,t.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Setting<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> SettingId<span class="token punctuation">;</span>\n    displayName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    options<span class="token operator">:</span> SettingOption<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    defaultValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>\n    value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>\n\n    requirement<span class="token operator">:</span> Requirement<span class="token punctuation">;</span>\n\n    <span class="token function">set</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>canAccess<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">validValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a valid value for setting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. It could be that the option is not yet unlocked.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">validValue</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> option <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> option<span class="token punctuation">.</span>value <span class="token operator">===</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>option <span class="token operator">==</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> <span class="token operator">!</span>option<span class="token punctuation">.</span>canAccess<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">isSelected</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">===</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">get</span> <span class="token function">canAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>requirement<span class="token punctuation">.</span>isCompleted\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>An example extension is the <code>RangeSetting</code>, which allows its value to be any float between an min and max.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">RangeSetting</span> <span class="token keyword">extends</span> <span class="token class-name">Setting<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n    min<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n    max<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span>id<span class="token operator">:</span> SettingId<span class="token punctuation">,</span> displayName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> min<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> requirement<span class="token operator">?</span><span class="token operator">:</span> Requirement<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Pass the default value as an option</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> displayName<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">SettingOption<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;Default&quot;</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">,</span> requirement<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">&gt;=</span> max <span class="token operator">||</span> max <span class="token operator">&lt;=</span> min<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RangeError</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Invalid range settings (min: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>min<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, max: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>max<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">) for setting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>min <span class="token operator">=</span> min<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>max <span class="token operator">=</span> max<span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">validValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RangeError</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultValue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a valid value for setting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">validValue</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> value <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>min <span class="token operator">&amp;&amp;</span> value <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>max<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>',4),S={href:"https://github.com/123ishaTest/igt-library/tree/master/src/ig-template/features/settings",target:"_blank",rel:"noopener noreferrer"},x=(0,t.Uk)("src/ig-template/features/settings"),_={href:"https://github.com/123ishaTest/igt-library/tree/master/src/ig-template/features/settings/Setting.ts",target:"_blank",rel:"noopener noreferrer"},q=(0,t.Uk)("src/ig-template/features/settings/Setting.ts"),U={href:"https://github.com/123ishaTest/igt-library/tree/master/src/ig-template/features/settings/BooleanSetting.ts",target:"_blank",rel:"noopener noreferrer"},T=(0,t.Uk)("src/ig-template/features/settings/BooleanSetting.ts"),I={},R=(0,a(3744).Z)(I,[["render",function(n,s){const a=(0,t.up)("RouterLink"),I=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,e,(0,t._)("ul",null,[o,l,c,u,i,(0,t._)("li",null,[r,(0,t.Wm)(a,{to:"/docs/tools/requirements.html"},{default:(0,t.w5)((()=>[k])),_:1})]),b]),m,(0,t._)("p",null,[d,g,h,(0,t._)("a",y,[w,(0,t.Wm)(I)]),f]),v,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",S,[x,(0,t.Wm)(I)])]),(0,t._)("li",null,[(0,t._)("a",_,[q,(0,t.Wm)(I)])]),(0,t._)("li",null,[(0,t._)("a",U,[T,(0,t.Wm)(I)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,t]of s)n[a]=t;return n}}}]);