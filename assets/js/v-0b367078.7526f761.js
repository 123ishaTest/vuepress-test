"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[538],{9024:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-0b367078",path:"/docs/features/item-list.html",title:"Item List",lang:"en-US",frontmatter:{id:"item-list",title:"Item List"},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[]},{level:2,title:"Usage",slug:"usage",children:[]},{level:2,title:"Implementation",slug:"implementation",children:[]},{level:2,title:"See also",slug:"see-also",children:[]}],filePathRelative:"docs/features/item-list.md",git:{updatedTime:1633465343e3,contributors:[{name:"Isha",email:"ishadijcks@gmail.com",commits:1}]}}},3704:(n,s,a)=>{a.r(s),a.d(s,{default:()=>y});var e=a(6252);const t=(0,e.Uk)("The "),p=(0,e._)("code",null,"ItemList",-1),o=(0,e.Uk)(" is a "),l=(0,e._)("code",null,"Feature",-1),c=(0,e.Uk)(" that can supply other Features with "),i=(0,e.Uk)("Items"),u=(0,e.Uk)(". It is closely related to the "),r=(0,e.Uk)("Inventory"),k=(0,e.Uk)("."),m=(0,e.uE)('<h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ul><li>Supply a fresh instance of any item when requested</li><li>Be able to inject all features in these items.</li></ul><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>With a full game, all you need to do is store a reference to the ItemList in the Feature you want to use it in.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyFeature</span> <span class="token punctuation">{</span>\n    _itemList<span class="token operator">:</span> ItemList\n    \n    <span class="token function">initialize</span><span class="token punctuation">(</span>features<span class="token operator">:</span> Features<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_itemList <span class="token operator">=</span> features<span class="token punctuation">.</span>itemList<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token function">update</span><span class="token punctuation">(</span>delta<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> moneyPouch<span class="token operator">:</span> MoneyPouch <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_itemList<span class="token punctuation">.</span>moneyPouch<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Or you can set it up from scratch</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> itemList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ItemList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> wallet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IgtWallet</span><span class="token punctuation">(</span><span class="token punctuation">[</span>CurrencyType<span class="token punctuation">.</span>Money<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nitemList<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    wallet<span class="token operator">:</span> wallet<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> moneyPouch <span class="token operator">=</span> itemList<span class="token punctuation">.</span>moneyPouch<span class="token punctuation">;</span>\nmoneyPouch<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nwallet<span class="token punctuation">.</span>money <span class="token comment">// 10</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="implementation" tabindex="-1"><a class="header-anchor" href="#implementation" aria-hidden="true">#</a> Implementation</h2><p>All items are implemented as <code>get</code>ters. This keeps the implementation clean.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ItemList</span> <span class="token keyword">extends</span> <span class="token class-name">Feature</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// Overridden in the initialize</span>\n    _features <span class="token operator">=</span> <span class="token keyword">undefined</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> Features\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">&#39;item-list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">initialize</span><span class="token punctuation">(</span>features<span class="token operator">:</span> Features<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span>features<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// Store all the features in case we need them</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_features <span class="token operator">=</span> features<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">get</span> <span class="token function">moneyPouch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> MoneyPouch <span class="token punctuation">{</span>\n        <span class="token comment">// The ItemList is responsible for injecting the Wallet</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MoneyPouch</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_features<span class="token punctuation">.</span>wallet<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>The name of the items&#39; getter, should be exactly the same as the value of the <code>ItemId</code>. That is how items are loaded.</p></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>',12),d={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/features/item-list/IgtItemList.ts",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("src/ig-template/features/item-list/IgtItemList.ts"),h={},y=(0,a(3744).Z)(h,[["render",function(n,s){const a=(0,e.up)("RouterLink"),h=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[(0,e._)("p",null,[t,p,o,l,c,(0,e.Wm)(a,{to:"/docs/tools/items.html"},{default:(0,e.w5)((()=>[i])),_:1}),u,(0,e.Wm)(a,{to:"/docs/features/inventory.html"},{default:(0,e.w5)((()=>[r])),_:1}),k]),m,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",d,[b,(0,e.Wm)(h)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);