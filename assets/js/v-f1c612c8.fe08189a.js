"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[595],{4426:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-f1c612c8",path:"/docs/introduction/launch-behaviour.html",title:"Launch Behaviour",lang:"en-US",frontmatter:{id:"launch-behaviour",title:"Launch Behaviour"},excerpt:"",headers:[{level:2,title:"Startup order",slug:"startup-order",children:[]},{level:2,title:"See also",slug:"see-also",children:[]}],filePathRelative:"docs/introduction/launch-behaviour.md",git:{updatedTime:1633465343e3,contributors:[{name:"Isha",email:"ishadijcks@gmail.com",commits:1}]}}},2753:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var e=a(6252);const t=(0,e.uE)('<p>This page will explain the life cycle of the features when the game is launching.</p><h2 id="startup-order" tabindex="-1"><a class="header-anchor" href="#startup-order" aria-hidden="true">#</a> Startup order</h2><p>When the game starts, the <code>Feature</code> methods will be run in the following order:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">static</span> game<span class="token operator">:</span> IgtGame<span class="token punctuation">;</span>\n\n    <span class="token keyword">static</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Create all feature objects and add them to the game</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>game <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Game</span><span class="token punctuation">(</span>\n            <span class="token punctuation">{</span>\n                wallet<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">IgtWallet</span><span class="token punctuation">(</span><span class="token punctuation">[</span>CurrencyType<span class="token punctuation">.</span>Money<span class="token punctuation">,</span> CurrencyType<span class="token punctuation">.</span>Secondary<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token comment">/* Whatever features your game has */</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// All features now exist and can subscribe to each others events</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>game<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Apply save data if it exists</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>game<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Run start on all features and update the game state</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>game<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>',5),p={href:"https://github.com/123ishaTest/igt-library/blob/master/src/App.ts",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("src/App.ts"),c={},l=(0,a(3744).Z)(c,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",p,[o,(0,e.Wm)(a)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);