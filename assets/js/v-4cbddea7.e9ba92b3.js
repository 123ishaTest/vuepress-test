"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[548],{6763:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-4cbddea7",path:"/docs/tools/hotkeys.html",title:"Hotkeys",lang:"en-US",frontmatter:{id:"hotkeys",title:"Hotkeys"},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[]},{level:2,title:"Usage",slug:"usage",children:[]},{level:2,title:"Implementation",slug:"implementation",children:[]},{level:2,title:"TODO",slug:"todo",children:[]},{level:2,title:"See also",slug:"see-also",children:[]}],filePathRelative:"docs/tools/hotkeys.md",git:{updatedTime:1633465343e3,contributors:[{name:"Isha",email:"ishadijcks@gmail.com",commits:1}]}}},3592:(n,s,a)=>{a.r(s),a.d(s,{default:()=>D});var t=a(6252);const p=(0,t._)("p",null,"Navigating Incremental Games can sometimes be a bit of a pain. In my opinion, a games' difficulty should not come from its UI. Hotkeys can improve User Experience by allowing the user to navigate tabs or claim resources with a single button press.",-1),e=(0,t._)("h2",{id:"requirements",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#requirements","aria-hidden":"true"},"#"),(0,t.Uk)(" Requirements")],-1),o=(0,t._)("li",null,"Work on all keyboard layouts",-1),c=(0,t._)("li",null,"Disable keybinds on request",-1),l=(0,t.Uk)("Possibility to add a "),i=(0,t.Uk)("Requirement"),u=(0,t.Uk)(" to a keybind"),r=(0,t._)("li",null,"Get an overview of all registered keybinds",-1),k=(0,t.uE)('<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Create your first keybind.</span>\n<span class="token keyword">const</span> keyBind <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KeyBind</span><span class="token punctuation">(</span><span class="token string">&quot;shift+x&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Do a thing&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;shift + x pressed!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// Additional logic</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> KeyEventType<span class="token punctuation">.</span>KeyUp\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// And register it.</span>\nHotKeys<span class="token punctuation">.</span><span class="token function">addKeyBind</span><span class="token punctuation">(</span>keyBind<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Get a list of descriptions for the registered keybinds.</span>\nHotKeys<span class="token punctuation">.</span><span class="token function">getKeyBindDescriptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>keyBind <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keyBind<span class="token punctuation">.</span>keys<span class="token punctuation">)</span> <span class="token comment">// &quot;shift+x&quot;</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keyBind<span class="token punctuation">.</span>description<span class="token punctuation">)</span> <span class="token comment">// &quot;Do a thing&quot;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// This callback only triggers if the condition is met.</span>\n<span class="token keyword">const</span> keyBindWithRequirement <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KeyBind</span><span class="token punctuation">(</span><span class="token string">&quot;ctrl+a&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Do another thing&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;ctrl + a pressed!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// Additional logic</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CurrencyRequirement</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> CurrencyType<span class="token punctuation">.</span>Money<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\nHotKeys<span class="token punctuation">.</span><span class="token function">addKeyBind</span><span class="token punctuation">(</span>keyBindWithRequirement<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Or use a custom condition.</span>\n<span class="token keyword">const</span> keyBindWithCustomCondition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomConditionKeyBind</span><span class="token punctuation">(</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Only works on wednesdays&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Perform some logic</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Manually trigger a callback.</span>\nHotKeys<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&quot;ctrl+a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="implementation" tabindex="-1"><a class="header-anchor" href="#implementation" aria-hidden="true">#</a> Implementation</h2>',3),b=(0,t.Uk)("I decided to use the "),m={href:"https://craig.is/killing/mice",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("Mousetrap library"),y=(0,t.Uk)(". It works very well and handles different keyboard layouts for us automatically!"),g=(0,t.uE)('<p>We need to pass the event type to Mousetrap. The following types are supported.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">enum</span> KeyEventType <span class="token punctuation">{</span>\n    KeyPress <span class="token operator">=</span> <span class="token string">&quot;keypress&quot;</span><span class="token punctuation">,</span>\n    KeyDown <span class="token operator">=</span> <span class="token string">&quot;keydown&quot;</span><span class="token punctuation">,</span>\n    KeyUp <span class="token operator">=</span> <span class="token string">&quot;keyup&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>A <code>KeyBind</code> is a fairly simple data class.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">KeyBind</span> <span class="token punctuation">{</span>\n    keys<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    callback<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">;</span>\n    requirement<span class="token operator">:</span> Requirement<span class="token punctuation">;</span>\n    eventType<span class="token operator">:</span> KeyEventType<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>On top of that a list of keybinds need to be kept such that you can always request a list of them.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**\n * Easily add KeyBinds from anywhere in your codebase.\n * Very useful to switch tabs or claim resources!\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">HotKeys</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * List of all registered keybinds\n     * <span class="token keyword">@private</span>\n     */</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> _keyBinds<span class="token operator">:</span> KeyBind<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * Register a keybind with mousetrap, but add the requirement in the callback.\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">addKeyBind</span><span class="token punctuation">(</span>keyBind<span class="token operator">:</span> KeyBind<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">Mousetrap</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>keyBind<span class="token punctuation">.</span>keys<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>keyBind<span class="token punctuation">.</span>requirement<span class="token punctuation">.</span>isCompleted<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                keyBind<span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> keyBind<span class="token punctuation">.</span>eventType<span class="token punctuation">)</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_keyBinds<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>keyBind<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * Unregister a keybind from mousetrap.\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">removeKeyBind</span><span class="token punctuation">(</span>keys<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> action <span class="token operator">=</span> KeyEventType<span class="token punctuation">.</span>KeyDown<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_keyBinds <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_keyBinds<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>keyBind<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> keyBind<span class="token punctuation">.</span>keys <span class="token operator">!==</span> keys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        Mousetrap<span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * Manyally trigger a callback. Note that the requirement still needs to be completed for it to run.\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">trigger</span><span class="token punctuation">(</span>keys<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> action <span class="token operator">=</span> KeyEventType<span class="token punctuation">.</span>KeyDown<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        Mousetrap<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * Generate a list of all descriptions to show in the UI.\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">getKeyBindDescriptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> KeyBindDescription<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_keyBinds<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>keyBind <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> keysText<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> keyBind<span class="token punctuation">.</span>keys <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> keyBind<span class="token punctuation">.</span>keys <span class="token operator">:</span> keyBind<span class="token punctuation">.</span>keys<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token string">&#39;keys&#39;</span><span class="token operator">:</span> keysText<span class="token punctuation">,</span>\n                <span class="token string">&#39;description&#39;</span><span class="token operator">:</span> keyBind<span class="token punctuation">.</span>description\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * Remove all registered keybinds.\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_keyBinds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        Mousetrap<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><h2 id="todo" tabindex="-1"><a class="header-anchor" href="#todo" aria-hidden="true">#</a> TODO</h2><ul><li>Let the player set they own keybinds.</li></ul><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>',9),h={href:"https://craig.is/killing/mice",target:"_blank",rel:"noopener noreferrer"},f=(0,t.Uk)("Mousetrap documentation"),w={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/hotkeys",target:"_blank",rel:"noopener noreferrer"},q=(0,t.Uk)("src/ig-template/tools/hotkeys/"),B={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/hotkeys/HotKeys.ts",target:"_blank",rel:"noopener noreferrer"},v=(0,t.Uk)("src/ig-template/tools/hotkeys/HotKeys.ts"),K={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/hotkeys/KeyBind.ts",target:"_blank",rel:"noopener noreferrer"},_=(0,t.Uk)("src/ig-template/tools/hotkeys/KeyBind.ts"),U={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/hotkeys/CustomConditionKeyBind.ts",target:"_blank",rel:"noopener noreferrer"},x=(0,t.Uk)("src/ig-template/tools/hotkeys/CustomConditionKeyBind.ts"),T={},D=(0,a(3744).Z)(T,[["render",function(n,s){const a=(0,t.up)("RouterLink"),T=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,e,(0,t._)("ul",null,[o,c,(0,t._)("li",null,[l,(0,t.Wm)(a,{to:"/docs/tools/requirements.html"},{default:(0,t.w5)((()=>[i])),_:1}),u]),r]),k,(0,t._)("p",null,[b,(0,t._)("a",m,[d,(0,t.Wm)(T)]),y]),g,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",h,[f,(0,t.Wm)(T)])]),(0,t._)("li",null,[(0,t._)("a",w,[q,(0,t.Wm)(T)])]),(0,t._)("li",null,[(0,t._)("a",B,[v,(0,t.Wm)(T)])]),(0,t._)("li",null,[(0,t._)("a",K,[_,(0,t.Wm)(T)])]),(0,t._)("li",null,[(0,t._)("a",U,[x,(0,t.Wm)(T)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,t]of s)n[a]=t;return n}}}]);