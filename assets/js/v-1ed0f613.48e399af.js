"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[550],{5523:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-1ed0f613",path:"/docs/features/redeemable-codes.html",title:"Redeemable Codes",lang:"en-US",frontmatter:{id:"redeemable-codes",title:"Redeemable Codes"},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[]},{level:2,title:"Usage",slug:"usage",children:[]},{level:2,title:"Implementation",slug:"implementation",children:[]},{level:2,title:"See also",slug:"see-also",children:[]}],filePathRelative:"docs/features/redeemable-codes.md",git:{updatedTime:1633465343e3,contributors:[{name:"Isha",email:"ishadijcks@gmail.com",commits:1}]}}},2815:(s,n,a)=>{a.r(n),a.d(n,{default:()=>d});var e=a(6252);const t=(0,e.uE)('<p>Redeemable codes are a great way to reward a specific set of players. You can distribute a code in your Discord that gives the user 100 money once. It is also useful for an early beta, where you can let the testers skip the early game with a code.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ul><li>Codes can be stored in the source, hashed so snoops can&#39;t find them</li><li>Codes cannot be redeemed multiple times</li><li>Codes should be able to give anything from any other Feature</li></ul><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Entering a code on a users behalf</span>\n<span class="token keyword">const</span> code <span class="token operator">=</span> App<span class="token punctuation">.</span>game<span class="token punctuation">.</span>features<span class="token punctuation">.</span>codes<span class="token punctuation">.</span><span class="token function">enterCode</span><span class="token punctuation">(</span><span class="token string">&quot;DUMMY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Code incorrect or already redeemed&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>code<span class="token punctuation">.</span>description<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Calculating the hash for a new code</span>\n<span class="token keyword">const</span> hash <span class="token operator">=</span> App<span class="token punctuation">.</span>game<span class="token punctuation">.</span>features<span class="token punctuation">.</span>codes<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span><span class="token string">&quot;DUMMY&quot;</span><span class="token punctuation">)</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 65408136</span>\n\n<span class="token comment">// Then you can create a new code in RedeemableCodes.ts</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n    <span class="token keyword">new</span> <span class="token class-name">RedeemableCode</span><span class="token punctuation">(</span>RedeemableCodeId<span class="token punctuation">.</span>exampleCode<span class="token punctuation">,</span> <span class="token string">&#39;Example code that gives 100 money, the key is &quot;DUMMY&quot;&#39;</span><span class="token punctuation">,</span> <span class="token number">65408136</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        features<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span><span class="token function">gainCurrency</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Currency</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> CurrencyType<span class="token punctuation">.</span>Money<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="implementation" tabindex="-1"><a class="header-anchor" href="#implementation" aria-hidden="true">#</a> Implementation</h2><p>People with access to the source code, will inspect it to see the codes. To avoid them spoiling the codes for everybody, we hash the codes, and only store the hash in the source code.</p><p>Each code has an <code>Id</code>, which is used as a save key. Redeemed codes are saved as a list of keys, so people can&#39;t claim them twice after a refresh.</p><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>',9),p={href:"https://github.com/123ishaTest/igt-library/tree/master/src/ig-template/features/codes",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("src/ig-template/features/codes"),c={href:"https://github.com/123ishaTest/igt-library/tree/master/src/ig-template/features/codes/IgtRedeemableCodes.ts",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("src/ig-template/features/codes/IgtRedeemableCodes.ts"),u={href:"https://github.com/123ishaTest/igt-library/tree/master/src/ig-template/features/codes/RedeemableCode.ts",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("src/ig-template/features/codes/RedeemableCode.ts"),r={},d=(0,a(3744).Z)(r,[["render",function(s,n){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",p,[o,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",c,[l,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",u,[i,(0,e.Wm)(a)])])])],64)}]])},3744:(s,n)=>{n.Z=(s,n)=>{for(const[a,e]of n)s[a]=e;return s}}}]);