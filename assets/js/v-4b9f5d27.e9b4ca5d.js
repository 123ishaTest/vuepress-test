"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[366],{4641:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-4b9f5d27",path:"/docs/tools/developer-panel.html",title:"Developer Panel",lang:"en-US",frontmatter:{id:"developer-panel",title:"Developer Panel"},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[]},{level:2,title:"Usage",slug:"usage",children:[]},{level:2,title:"See also",slug:"see-also",children:[]}],filePathRelative:"docs/tools/developer-panel.md",git:{updatedTime:1633465343e3,contributors:[{name:"Isha",email:"ishadijcks@gmail.com",commits:1}]}}},7633:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var e=a(6252);const t=(0,e.uE)('<p>When play-testing your game, it often happens that you want to set some variables to test something out. You could load a specific save file, or do some hacking through the console, but this isn&#39;t always feasible.</p><p>The Developer Panel is a solution! It allows each <code>Feature</code> to register a list of <code>Field</code>s, that perform actions specific to your Feature. You can add an input field that allows you to set any value to an attribute. Or a button that runs a custom function!</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ul><li>Support the most basic use-cases (number input)</li><li>Only exists in Development mode and will be disabled in production</li></ul><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Each <code>Feature</code> has a <code>getDeveloperPanelFields()</code> method that returns an empty list by default. Override this method with a list of fields, and they will show up in the Panel under the Features tab!</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">IgtWallet</span> <span class="token keyword">extends</span> <span class="token class-name">Feature</span> <span class="token punctuation">{</span>\n    money<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    moneyMultiplier<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n    <span class="token function">getDeveloperPanelFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> AbstractField<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">[</span>\n            <span class="token comment">// Create an editable textfield for the attribute &#39;money&#39;</span>\n            <span class="token keyword">new</span> <span class="token class-name">NumberField</span><span class="token punctuation">(</span><span class="token string">&#39;money&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Current Money&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            \n            <span class="token comment">// Create a button with a custom function</span>\n            <span class="token keyword">new</span> <span class="token class-name">FunctionField</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>money <span class="token operator">=</span> <span class="token number">10</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;Set money to 10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCssClass</span><span class="token punctuation">(</span><span class="token string">&#39;btn-blue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            \n            <span class="token comment">// Create a range slider for the attribute &#39;money&#39;</span>\n            <span class="token keyword">new</span> <span class="token class-name">RangeField</span><span class="token punctuation">(</span><span class="token string">&#39;money&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;Money Slider&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            \n            <span class="token comment">// Create a dropdown menu</span>\n            <span class="token keyword">new</span> <span class="token class-name">ChoiceField</span><span class="token punctuation">(</span><span class="token string">&#39;moneyMultiplier&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">[</span><span class="token string">&#39;0.5x&#39;</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">[</span><span class="token string">&#39;1x&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">[</span><span class="token string">&#39;2x&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;Multiplier&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>',8),p={href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/developer-panel/fields/",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("Available fields"),l={},c=(0,a(3744).Z)(l,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",p,[o,(0,e.Wm)(a)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);